{"glosario":{"slug":"glosario","filePath":"glosario.md","title":"Glosario","links":[],"tags":[],"content":"Antes de empezar a explorar los tutoriales y experimentos de Field Code, vale la pena detenerse un momento en las palabras. La tecnolog√≠a ‚Äîcomo toda cultura‚Äî tiene su propio lenguaje. Entenderlo no significa volverse ingeniero o programadora, sino aprender a moverse con soltura en un nuevo campo: el digital.\nEste glosario no busca precisi√≥n t√©cnica absoluta, sino ofrecer una puerta de entrada conceptual para antrop√≥logos, investigadores cualitativos y curiosos que quieran incorporar herramientas digitales en su pr√°ctica.\n\nüß† IA (Inteligencia Artificial)\nLa IA es un conjunto de t√©cnicas que permiten que una m√°quina ‚Äúaprenda‚Äù a realizar tareas que normalmente asociamos con la inteligencia humana: reconocer patrones, generar texto, analizar im√°genes, tomar decisiones o conversar.\nNo es una conciencia ni una mente, sino un sistema entrenado con datos que aprende a producir resultados similares a los humanos.\nEn antropolog√≠a, la IA puede ser vista como objeto de estudio, herramienta y contexto cultural: algo que analizamos, usamos y habitamos al mismo tiempo.\n\nüí¨ LLM (Large Language Model)\nUn modelo de lenguaje grande es un tipo espec√≠fico de IA dise√±ado para trabajar con texto. Aprende a predecir la siguiente palabra en una frase, y de esa manera genera lenguaje.\nModelos como ChatGPT o Claude se entrenan con enormes cantidades de datos textuales y pueden conversar, escribir, resumir, traducir o crear c√≥digo.\nPodemos pensarlos como colectores de discurso: condensan fragmentos del habla y la escritura humana en un sistema estad√≠stico que ‚Äúhabla‚Äù con nosotros.\n\nüîå API (Application Programming Interface)\nUna API es una interfaz que permite que un programa se comunique con otro. Podr√≠amos imaginarla como un puente entre dos mundos digitales: un canal que permite enviar una solicitud (‚Äúquiero esta informaci√≥n‚Äù) y recibir una respuesta (‚Äúaqu√≠ est√°‚Äù). Por ejemplo, si queremos usar ChatGPT desde un script de Python o visualizar datos de Twitter, lo hacemos a trav√©s de sus APIs. Para el trabajo etnogr√°fico, las APIs son fuentes y mediaciones: lugares donde circulan los datos que luego analizamos.\n\nüíª C√≥digo\nEl c√≥digo es el lenguaje que usamos para dar instrucciones a las m√°quinas.\nNo es solo un conjunto de s√≠mbolos t√©cnicos: es una forma de escritura con su propia gram√°tica, ritmo y estilo.\nEscribir c√≥digo puede ser tan interpretativo y creativo como escribir campo o an√°lisis.\nEn Field Code, el c√≥digo se entiende como un lenguaje etnogr√°fico expandido, que nos permite observar, transformar y narrar el mundo digital.\n\nüß© Lenguaje de programaci√≥n\nUn lenguaje de programaci√≥n es el idioma en el que escribimos c√≥digo para comunicarnos con una computadora.\nCada lenguaje tiene su estilo, su comunidad y su l√≥gica. Algunos se usan para an√°lisis de datos, otros para arte digital, dise√±o web o inteligencia artificial.\nAprender un lenguaje no es solo adquirir una t√©cnica: es entrar en una forma particular de pensar y organizar el mundo.\n\nüêç Python\nPython es un lenguaje de programaci√≥n muy popular por su claridad y simplicidad.\nSe usa en m√∫ltiples √°reas: an√°lisis de datos, ciencia, inteligencia artificial, visualizaci√≥n o automatizaci√≥n.\nPara investigadores cualitativos, Python puede ser una herramienta de ampliaci√≥n del campo: permite procesar textos, analizar redes, generar visualizaciones o experimentar con IA sin necesidad de tener una formaci√≥n t√©cnica previa.\n\n‚öôÔ∏è Compilador\nEl compilador (o int√©rprete) es el programa que traduce el c√≥digo que escribimos a un lenguaje que la computadora pueda entender y ejecutar.\nImagin√©moslo como un traductor simult√°neo entre el lenguaje humano y el lenguaje m√°quina.\nAunque no solemos interactuar directamente con √©l, est√° siempre presente, haciendo posible que nuestras l√≠neas de c√≥digo se transformen en acci√≥n.\n\nüåç Aprender a leer el c√≥digo del mundo\nEste glosario no pretende agotar los significados de cada t√©rmino, sino abrir un territorio com√∫n para explorarlos desde la pr√°ctica. A medida que avancemos en los tutoriales, estas palabras se llenar√°n de ejemplos, usos y experimentos. Porque el campo ‚Äîese espacio donde la antropolog√≠a observa, escucha y crea‚Äî tambi√©n corre en Python."},"index":{"slug":"index","filePath":"index.md","title":"Bienvenid@ a Field Code","links":[],"tags":[],"content":"Field Code\nIA, c√≥digo y otras tecnolog√≠as para antrop√≥logos\n\nLa antropolog√≠a siempre ha explorado los m√°rgenes de lo humano: los significados, las pr√°cticas, las relaciones y los sistemas que nos sostienen. Hoy, ese margen se ha movido hacia lo digital. La inteligencia artificial, el c√≥digo y los datos se han convertido en nuevos territorios etnogr√°ficos, pero tambi√©n en herramientas que pueden transformar nuestra manera de investigar, analizar y crear conocimiento.\nField Code nace como un proyecto de tutoriales semanales sobre la incorporaci√≥n de herramientas digitales en los flujos de trabajo de los antrop√≥logos e investigadores cualitativos. Aqu√≠ encontrar√°s gu√≠as pr√°cticas, experimentos y reflexiones sobre c√≥mo usar la IA, el an√°lisis de datos y la programaci√≥n para potenciar nuestras pr√°cticas de campo, de an√°lisis y de escritura.\nLa apuesta es clara: desarrollar expertise tecnol√≥gica sin perder el coraz√≥n etnogr√°fico. Aprender a escribir c√≥digo sin dejar de escribir sobre lo humano. Navegar la Era de la Inteligencia Artificial sin renunciar a la mirada cr√≠tica que caracteriza a la antropolog√≠a.\n\nüß≠ Cada semana compartir√© un nuevo tutorial, ejemplo o reflexi√≥n.\nEste espacio est√° pensado para aprender, explorar y hackear la antropolog√≠a desde el c√≥digo.\nBienvenid@ a Field Code.\nEl campo sigue abierto, solo que ahora tambi√©n corre en Python."},"post_1":{"slug":"post_1","filePath":"post_1.md","title":"Genera una clave API de Gemini","links":["glosario"],"tags":[],"content":"En este tutorial vamos a generar una clave de acceso a la API de Gemini. Una clave API es una credencial que nos permite acceder a los productos o servicios de software que una empresa provee. En algunos casos es gratuito y otras veces tiene alg√∫n costo. Para este ejemplo, solo aplicaremos a una clave API gratuita. Por √∫ltimo, recuerda anotar siempre tu clave API en alg√∫n lugar seguro ya que solo se muestra una sola vez.\nRequisitos\nimport anthropic\n \nclient = anthropic.Anthropic(\n    # defaults to os.environ.get(&quot;ANTHROPIC_API_KEY&quot;)\n    api_key=&quot;my_api_key&quot;,\n)\nmessage = client.messages.create(\n    model=&quot;claude-sonnet-4-5&quot;,\n    max_tokens=1024,\n    messages=[\n        {&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hello, Claude&quot;}\n    ]\n)\nprint(message.content)\n\n  This compatibility layer is primarily intended to test and compare model capabilities, and is not considered a long-term or production-ready solution for most use cases. While we do intend to keep it fully functional and not make breaking changes, our priority is the reliability and effectiveness of the [Claude API](/en/api/overview).\nFor more information on known compatibility limitations, see Important OpenAI compatibility limitations.\nIf you encounter any issues with the OpenAI SDK compatibility feature, please let us know here.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFieldSupport statusmodelUse Claude model namesmax_tokensFully supportedmax_completion_tokensFully supportedstreamFully supportedstream_optionsFully supportedtop_pFully supportedparallel_tool_callsFully supportedstopAll non-whitespace stop sequences worktemperatureBetween 0 and 1 (inclusive). Values greater than 1 are capped at 1.nMust be exactly 1logprobsIgnoredmetadataIgnoredresponse_formatIgnoredpredictionIgnoredpresence_penaltyIgnoredfrequency_penaltyIgnoredseedIgnoredservice_tierIgnoredaudioIgnoredlogit_biasIgnoredstoreIgnoreduserIgnoredmodalitiesIgnoredtop_logprobsIgnoredreasoning_effortIgnored\n\n  Show fields\nTools\ntools[n].function fields\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFieldSupport statusnameFully supporteddescriptionFully supportedparametersFully supportedstrictIgnored\n"}}